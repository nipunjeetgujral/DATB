version: '3.9'

x-airflow-env: &airflow_env
  AIRFLOW__CORE__EXECUTOR: LocalExecutor
  AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
  AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres:5432/airflow
  AIRFLOW__CORE__FERNET_KEY: x7wQkzjYUS6G2JfS2uYyH8tmnqYlqKqQ
  AIRFLOW__WEBSERVER__SECRET_KEY: change_me

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports: ['5432:5432']
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  airflow-init:
    build: { context: ., dockerfile: airflow.dockerfile }
    environment: *airflow_env
    command: >
      bash -lc "airflow db init &&
      airflow users create --role Admin --username admin --password admin
      --email admin@example.com --firstname Air --lastname Flow"
    depends_on: [postgres]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./.env:/opt/airflow/.env

  airflow-webserver:
    build: { context: ., dockerfile: airflow.dockerfile }
    environment:
      <<: *airflow_env
      PYTHONPATH: /opt/airflow
      TIINGO_TOKEN: ${TIINGO_TOKEN}
      PG_DSN: postgresql://postgres:postgres@postgres:5432/btc
    command: webserver
    ports: ['8080:8080']
    depends_on: [airflow-init]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./.env:/opt/airflow/.env

  airflow-scheduler:
    build: { context: ., dockerfile: airflow.dockerfile }
    environment:
      <<: *airflow_env
      PYTHONPATH: /opt/airflow
      TIINGO_TOKEN: ${TIINGO_TOKEN}
      PG_DSN: postgresql://postgres:postgres@postgres:5432/btc
    command: scheduler
    depends_on: [airflow-init]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./.env:/opt/airflow/.env

  airflow-triggerer:
    build: { context: ., dockerfile: airflow.dockerfile }
    environment: *airflow_env
    command: triggerer
    depends_on: [airflow-init]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./.env:/opt/airflow/.env

volumes: { pgdata: {} }